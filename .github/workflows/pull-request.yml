
name: pull-request

on:
  pull_request:
    branches: [ "main" ]

jobs:

  unit_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup go
      uses: actions/setup-go@v5
      with:
        go-version: stable

    - name: Check testset
      run: cd ./cmd && bash ./check_testset.sh

    - name: Check order of tests
      run: cd ./cmd && bash ./check_order_of_tests.sh

    - name: Run unit tests
      run: go test -v ./... -cover

  lint_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Lint markdown files
      uses: DavidAnson/markdownlint-cli2-action@v20
      with:
        globs: '**/*.md'

    - uses: actions/setup-go@v5
      with:
        go-version: stable
      
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: v2.1

    - name: Setup Cloud Formation Linter with Latest Version
      uses: scottbrenner/cfn-lint-action@v2

    - name: Print the Cloud Formation Linter Version & run Linter.
      run: |
        cfn-lint --version
        cfn-lint -t ./examples/aws/cloudformation.yaml
        cfn-lint -t ./examples/dev-test/aws-dev/cloudformation.yaml
        cfn-lint -t ./examples/dev-test/aws-pre-install-plugin/cloudformation.yaml

    - name: ShellCheck
      uses: ludeeus/action-shellcheck@master

  docker_build_push:
    runs-on: ubuntu-latest
    needs: [ unit_tests, lint_tests ]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: frederiquer/argocd-ephemeral-access-plugin-servicenow:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: 'frederiquer/argocd-ephemeral-access-plugin-servicenow:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'